- name: "Security : sshd : Remove junk from /etc/ssh/"
  file:
    path: /etc/ssh/{{ item }}
    state: absent
  with_items:
    - ssh_host_dsa_key
    - ssh_host_dsa_key.pub
    - ssh_host_ecdsa_key
    - ssh_host_ecdsa_key.pub
  when: ansible_os_family != 'Darwin'
  notify:
    - Restart sshd Debian
    - Restart sshd Darwin

- name: Get wg ip of current inventory host
  local_action: "shell echo '{{ hostvars[inventory_hostname]['do_name'] }}' | ../bin/names_to_wg_ips"
  changed_when: false
  check_mode: no
  register: wireguard_ip_of_current_host_conversion
  when: use_wireguard
  # failed_when: false

- set_fact:
    wireguard_ip_of_current_host: "{{ wireguard_ip_of_current_host_conversion.stdout }}"
  check_mode: no
  when: use_wireguard

- name: wireguard_ip_of_current_host
  debug:
    msg: "{{ wireguard_ip_of_current_host }}"
    # verbosity: "1"
  check_mode: no
  when: use_wireguard


- name: Install jq homebrew package
  homebrew:
    name: jq
    # state: latest
    # update_homebrew: true
    path: "{{ homebrew_prefix }}/bin"
  become: true
  become_user: "{{ admin_username }}"
  when: ansible_os_family == 'Darwin' and use_homebrew and not ansible_check_mode
  changed_when: false
  async: 7200
  poll: 0
  register: homebrew_jq
  tags:
    - jq
- name: 'homebrew_jq - wait for async task'
  async_status:
    jid: "{{ homebrew_jq.ansible_job_id }}"
  register: job_result_homebrew_jq
  until: job_result_homebrew_jq.finished
  become: true
  become_user: "{{ admin_username }}"
  retries: 800
  delay: 10
  failed_when: false
  when: ansible_os_family == 'Darwin' and use_homebrew and not ansible_check_mode
  tags:
    - jq

# - name: Install jq homebrew package without homebrew
#   get_url:
#     url: https://github.com/stedolan/jq/releases/download/jq-1.6/jq-osx-amd64
#     dest: /usr/local/bin/jq
#     mode: '0755'
#   when: ansible_os_family == 'Darwin' and not use_homebrew

- name: Install jq package
  package:
    name: jq
    # state: latest
  when: ansible_os_family != 'Darwin'

- name: Get tailscale IP
  # shell: tailscale status --json | jq -r '.Self.TailAddr'
  shell: tailscale ip --4
  register: tailscale_ip_v4_reg
  changed_when: false
  check_mode: no
  environment:
    PATH: "{{ homebrew_prefix | default('') }}/bin:/usr/local/sbin:/usr/local/bin:{{ ansible_env.PATH }}"
- name: tailscale_ip_v4_reg
  debug:
    msg: "{{ tailscale_ip_v4_reg }}"
    # verbosity: "1"
  check_mode: no
- set_fact:
    tailscale_ip_v4: "{{ tailscale_ip_v4_reg.stdout }}"
  check_mode: no
- name: tailscale_ip_v4
  debug:
    msg: "{{ tailscale_ip_v4 }}"
    # verbosity: "1"
  check_mode: no

# Use a custom, secure sshd config
# Note: We do NOT include this template with this role, so that the role can be public while keeping the
# slightly-confidential sshd settings more private.
- name: Install sshd_config
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    # group: root
    mode: 0644
  notify:
    - Restart sshd Debian
    - Restart sshd Darwin
