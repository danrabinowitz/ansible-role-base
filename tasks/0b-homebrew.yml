# Let's install homebrew.
# There are a few options:
# 1) Install it globally, and have it owned by the admin user
# 2) Install it globally, and have it owned by the custom user
# 3) Install it separately for each user
# I had trouble with 1.
# Even if option 2 were the best idea, it is challenging in this bootstrapping phase since we don't have a custom user yet.
# So let's try option 3.
# ref https://stackoverflow.com/a/59691631
# ref https://docs.brew.sh/Installation#multiple-installations
# I had high hopes for this one, but it never worked well enough: https://medium.com/@leifhanack/homebrew-multi-user-setup-e10cb5849d59

# So we'll install it for the admin user here.

- name: "homebrew : install dir"
  set_fact:
     homebrew_install_dir: "/Users/{{ admin_username }}/.homebrew"
  check_mode: no
  when: homebrew_install_dir is not defined
  tags:
    - always

- name: Create install dir
  file:
    path: "{{ homebrew_install_dir }}"
    state: directory
    owner: "{{ homebrew_user }}"
    group: "staff"
    mode: 0700

- name: Install homebrew for the admin user in ~/.homebrew
  shell: curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C "{{ homebrew_install_dir }}"
  become: true
  become_user: "{{ admin_username }}"
  args:
    creates: "{{ homebrew_install_dir }}/Library"
  when: not homebrew_install_global
  

- name: "setup : homebrew prefix"
  set_fact:
     homebrew_prefix: "{{ homebrew_install_dir }}"
  check_mode: no
  tags:
    - always

- name: Debug homebrew_prefix
  debug:
    var: homebrew_prefix
    verbosity: 0
  check_mode: no

# - name: "homebrew : set path_with_brew"
#   set_fact:
#      path_with_brew: "{{ homebrew_prefix }}/bin:{{ ansible_env.PATH }}"
#   check_mode: no
#   tags:
#     - always

# - name: Debug path_with_brew
#   debug:
#     var: path_with_brew
#     verbosity: 0
#   check_mode: no
#   tags:
#     - always

# TODO: Can I overwrite ansible_env.PATH?
- name: Validate that brew is in the path
  shell: brew --prefix
  environment:
    PATH: "{{ homebrew_prefix }}/bin:{{ ansible_env.PATH }}"
    # PATH: "{{ ansible_env.PATH }}"
    # PATH: "{{ path_with_brew }}"
  check_mode: no
  changed_when: false
  register: brew_prefix_reg

- name: Debug brew_prefix_reg
  debug:
    var: brew_prefix_reg
    verbosity: 0
  check_mode: no



# OS X Command line tools are required to use homebrew
# WARNING: This fails on MacOS Monterey 12.2. It needs a GUI to install.
# So at this point, run it manually.
# - name: Run elliotweiser.osx-command-line-tools
#   include_role:
#     name: elliotweiser.osx-command-line-tools

# brew doctor complains if git is not installed.
- name: Install git homebrew package
  homebrew:
    name: git
    update_homebrew: yes
    path: "{{ homebrew_prefix }}/bin"
  become: true
  become_user: "{{ admin_username }}"
  async: 7200
  poll: 0
  register: homebrew_git
  when: not ansible_check_mode
- name: 'homebrew_git - wait for async task'
  async_status:
    jid: "{{ homebrew_git.ansible_job_id }}"
  register: job_result_homebrew_git
  until: job_result_homebrew_git.finished
  become: true
  become_user: "{{ admin_username }}"
  retries: 800
  delay: 10
  when: not ansible_check_mode



# Maybe run brew doctor ?
