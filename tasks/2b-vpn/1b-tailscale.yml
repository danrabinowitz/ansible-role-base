# - name: Print ansible_os_family
#   ansible.builtin.debug:
#     var: ansible_os_family
#   tags:
#     - always

- name: Install tailscale{,d}
  copy:
    src: tailscale/{{ goos }}-{{ goarch }}/bin/{{ item }}
    dest: /usr/local/bin
    owner: root
    group: "{{ wheel_group }}"
    mode: 0755
    force: no
  with_items:
    - tailscale
    - tailscaled
  when: ansible_os_family != 'Debian'

- name: ensure do-agent apt repository public key is installed
  apt_key:
    url: https://pkgs.tailscale.com/stable/ubuntu/bionic.gpg
    state: present
  when: ansible_os_family == 'Debian'

- name: ensure apt repository is enabled
  apt_repository:
    repo: deb https://pkgs.tailscale.com/stable/ubuntu bionic main
    filename: tailscale
    update_cache: true
    state: present
  when: ansible_os_family == 'Debian'

- name: ensure latest package is installed
  package:
    name: tailscale
    state: latest
  when: ansible_os_family == 'Debian'

- name: Install tailscale system daemon
  shell: mv /usr/local/bin/tailscaled /usr/local/bin/tailscaled-orig && /usr/local/bin/tailscaled-orig install-system-daemon
  args:
    creates: /Library/LaunchDaemons/com.tailscale.tailscaled.plist
  when: ansible_os_family == 'Darwin'


- name: Check if Tailscale is connected
  command: tailscale status
  changed_when: false
  register: tailscale_status
  check_mode: no
  # failed_when: false
  environment:
    PATH: "{{ homebrew_prefix | default('') }}/bin:{{ homebrew_prefix  | default('') }}/sbin:/usr/local/sbin:/usr/local/bin:{{ ansible_env.PATH }}"

- name: Tailscale Status
  debug:
    var: tailscale_status
  # when: verbose | bool
  check_mode: no

- name: Get tailscale auth key
  pause:
    prompt: Enter the one-time use tailscale auth key
    echo: no
  register: tailscale_auth_key
  no_log: true
  when: >
    ('nas1' not in tailscale_status.stdout)

- name: Bring Tailscale Up
  become: true
  # The command module cannot use | ; &
  # So we are ok not quoting the variables
  command: tailscale up --authkey={{ tailscale_auth_key.user_input }} {{ tailscale_args | default() }}
  environment:
    PATH: "{{ homebrew_prefix | default('') }}/bin:{{ homebrew_prefix  | default('') }}/sbin:/usr/local/sbin:/usr/local/bin:{{ ansible_env.PATH }}"
  # Since the auth key is included in this task, we do not want to log output
  # no_log: true
  register: tailscale_start
  when: >
    ('nas1' not in tailscale_status.stdout)

  # when: >
  #   and 'hello-ipn-dev' not in tailscale_status.stdout)
  # when: >
  #   force | bool or
  #   (not tailscale_up_skip | bool
  #   and 'hello-ipn-dev' not in tailscale_status.stdout)
  # notify: Confirm Tailscale is Connected
