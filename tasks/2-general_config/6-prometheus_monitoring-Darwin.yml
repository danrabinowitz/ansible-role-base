- name: Install node_exporter homebrew package
  homebrew:
    name: node_exporter
    state: latest
    # update_homebrew: true
  become: true
  become_user: "{{ admin_username }}"

- name: Block all node exporter connections by default
  lineinfile:
    path: /etc/pf.conf
    line: 'block return in proto tcp from any to any port 9100'
  notify:
    - Reload pfconf

- name: Allow connections from prometheus server
  lineinfile:
    path: /etc/pf.conf
    line: 'pass in inet proto tcp from 10.0.0.1/32 to any port 9100 no state'
  notify:
    - Reload pfconf

- name: Create launchd plist
  template:
    src: macos/Library/LaunchDaemons/homebrew.mxcl.node_exporter.plist.j2
    dest: /Library/LaunchDaemons/homebrew.mxcl.node_exporter.plist
    owner: root
    group: wheel
    mode: 0644
  register: plist


- name: Get node_exporter path
  shell: echo "$(/usr/local/bin/brew --cellar node_exporter)/$(/usr/local/bin/brew list --versions node_exporter | awk '{print $2}')/bin/node_exporter"
  register: node_exporter_path_reg
  check_mode: no
  changed_when: false
  become: true
  become_user: "{{ admin_username }}"

- name: Debug node_exporter_path_reg
  debug:
    var: node_exporter_path_reg
    # verbosity: "1"
  check_mode: no

- name: Check if prometheus-node-exporter if allowed in the Application Firewall (ALF)
  shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --listapps | grep -c '{{ node_exporter_path_reg.stdout }}' || true"
  register: alf_exporter_reg
  check_mode: no
  changed_when: false

- set_fact:
    alf_exporter_allowed: "{{ alf_exporter_reg.stdout == '1' }}"
  check_mode: no

- name: Debug alf_exporter_allowed
  debug:
    var: alf_exporter_allowed
    # verbosity: "1"
  check_mode: no

- name: Unblock prometheus-node-exporter for the Application Firewall (ALF)
  # shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --unblockapp {{ node_exporter_path_reg.stdout }}"
  shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --add {{ node_exporter_path_reg.stdout }}"
  when: not alf_exporter_allowed

- name: Start prometheus-node-exporter
  shell: "launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.node_exporter.plist"
  when: plist.changed

- name: Create textfile_collector dir
  file:
    path: "/var/lib/{{ item }}"
    state: directory
    owner: root
    group: wheel
    mode: 0755
  with_items:
    - node_exporter
    - node_exporter/textfile_collector

# - name: Update /etc/init.d/prometheus-node-exporter to use textfile_collector
#   copy:
#     src: etc/init.d/prometheus-node-exporter
#     dest: /etc/init.d/prometheus-node-exporter
#     owner: root
#     group: wheel
#     mode: 0755
#   notify:
#     - Restart prometheus-node-exporter Darwin

- name: Fix args for prometheus-node-exporter
  copy:
    src: macos/usr/local/etc/node_exporter.args
    dest: /usr/local/etc/node_exporter.args
    owner: root
    group: wheel
    mode: 0644
  notify:
    - Restart prometheus-node-exporter Darwin

- name: Install node-exporter-shell
  copy:
    src: node-exporter-djr-darwin.sh
    dest: /usr/local/sbin/node-exporter-shell
    owner: root
    group: wheel
    mode: 0755
  tags:
    - wip

- name: Create launchd plist for node-exporter-shell
  copy:
    src: macos/Library/LaunchDaemons/com.djrtechconsulting.node_exporter_shell.plist
    dest: /Library/LaunchDaemons/com.djrtechconsulting.node_exporter_shell.plist
    owner: root
    group: wheel
    mode: 0644
  register: shell_plist

- name: Get socat path
  shell: echo "$(/usr/local/bin/brew --cellar socat)/$(/usr/local/bin/brew list --versions socat | awk '{print $2}')/bin/socat"
  register: socat_path_reg
  check_mode: no
  changed_when: false
  become: true
  become_user: "{{ admin_username }}"

- name: Debug socat_path_reg
  debug:
    var: socat_path_reg
    # verbosity: "1"
  check_mode: no

- name: Check if socat if allowed in the Application Firewall (ALF)
  shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --listapps | grep -c '{{ socat_path_reg.stdout }}' || true"
  register: alf_socat_reg
  check_mode: no
  changed_when: false

- set_fact:
    alf_socat_allowed: "{{ alf_socat_reg.stdout == '1' }}"
  check_mode: no

- name: Debug alf_socat_allowed
  debug:
    var: alf_socat_allowed
    # verbosity: "1"
  check_mode: no

- name: Unblock socat for the Application Firewall (ALF)
  # shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --unblockapp {{ socat_path_reg.stdout }}"
  shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --add {{ socat_path_reg.stdout }}"
  when: not alf_socat_allowed

- name: Block all node exporter connections by default
  lineinfile:
    path: /etc/pf.conf
    line: 'block return in proto tcp from any to any port 9806'
  notify:
    - Reload pfconf

- name: Allow connections from prometheus server
  lineinfile:
    path: /etc/pf.conf
    line: 'pass in inet proto tcp from 10.0.0.1/32 to any port 9806 no state'
  notify:
    - Reload pfconf

- name: Start prometheus-node-exporter-shell
  shell: "launchctl load -w /Library/LaunchDaemons/com.djrtechconsulting.node_exporter_shell.plist"
  when: shell_plist.changed

# Monitor time machine
- name: Install time-machine-metadata-exporter
  copy:
    src: macos/usr/local/sbin/time-machine-metadata-exporter
    dest: /usr/local/sbin/time-machine-metadata-exporter
    owner: root
    group: wheel
    mode: 0700
  notify:
    - Restart time-machine-metadata-exporter
- name: Install time-machine-metadata-exporter plist
  copy:
    src: macos/Library/LaunchDaemons/time-machine-metadata-exporter.plist
    dest: /Library/LaunchDaemons/time-machine-metadata-exporter.plist
    owner: root
    group: wheel
    mode: 0644
  notify:
    - Restart time-machine-metadata-exporter

- name: Check if time-machine-metadata-exporter if allowed in the Application Firewall (ALF)
  shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --listapps | grep -c '/usr/local/sbin/time-machine-metadata-exporter' || true"
  register: alf_tmm_exporter_reg
  check_mode: no
  changed_when: false

- set_fact:
    alf_tmm_exporter_allowed: "{{ alf_tmm_exporter_reg.stdout == '1' }}"
  check_mode: no

- name: Debug alf_tmm_exporter_allowed
  debug:
    var: alf_tmm_exporter_allowed
    # verbosity: "1"
  check_mode: no

- name: Unblock time-machine-metadata-exporter for the Application Firewall (ALF)
  shell: "/usr/libexec/ApplicationFirewall/socketfilterfw --add /usr/local/sbin/time-machine-metadata-exporter"
  when: not alf_tmm_exporter_allowed

- name: Block all node exporter connections by default
  lineinfile:
    path: /etc/pf.conf
    line: 'block return in proto tcp from any to any port 9807'
  notify:
    - Reload pfconf
- name: Allow connections from prometheus server
  lineinfile:
    path: /etc/pf.conf
    line: 'pass in inet proto tcp from 10.0.0.1/32 to any port 9807 no state'
  notify:
    - Reload pfconf
